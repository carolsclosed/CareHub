@using Microsoft.AspNetCore.Identity
@model IEnumerable<CareHub.Models.Posts>
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Índice";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Administrador");
}

<head>
    <title>Índice</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
</head>

<div class="container mt-4">
    <h1 class="text-center mb-4">Publicações do Fórum</h1>

    <div class="text-center mb-4">
        <a class="btn btn-outline-secondary" asp-action="Criar">Criar nova publicação</a>
    </div>

    @foreach (var item in Model)
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <img src="@item.Utilizador.Foto" alt="Foto do utilizador" class="rounded-circle me-3" width="50" height="50" />
                    <strong>@item.Utilizador.Nome</strong>
                </div>

                <h5 class="card-title">@item.TituloPost</h5>
                <h6 class="card-subtitle mb-2 text-muted">@item.Categoria</h6>
                <p class="card-text">@item.TextoPost</p>

                @if (!string.IsNullOrEmpty(item.Foto))
                {
                    <img src="@item.Foto" alt="Imagem da publicação" class="img-fluid rounded mb-3" style="max-width: 100%;" />
                }

                <div class="d-flex align-items-center mb-2">
                    <button class="btn btn-outline-success btn-sm me-2" onclick="AtualizaUpvote(@item.IdPost)">
                        <i class="bi bi-arrow-up"></i> <!-- icon bootstrap -->
                    </button>
                    <span id="upvote-count-@item.IdPost">@item.ListaUp.Count</span> <!-- contador de upvote -->
                </div>

                
                <p class="text-muted">@item.DataPost.ToShortDateString()</p>

                <div>
                    <a class="btn btn-sm btn-outline-secondary me-2" asp-action="Detalhes" asp-route-id="@item.IdPost">Detalhes</a>

                    @if (item.Utilizador.IdentityUserName == User.Identity.Name || isAdmin)
                    {
                        <a class="btn btn-sm btn-outline-primary me-2" asp-action="Editar" asp-route-id="@item.IdPost">Editar</a>
                        <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.IdPost">Apagar</a>
                    }
                </div>
            </div>
        </div>
    }
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/UpSocket")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();

    async function start() {
        try {
            await connection.start();
            console.log("SignalR Connected.");
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

    function AtualizarUpvotes(){
        connection.invoke("AtualizarUpvotes", idPub);AtualizaUpvote
        
    }
    
    // Start the connection.
    start();
</script>