@using System.Transactions
@using Microsoft.AspNetCore.Identity
@using Microsoft.IdentityModel.Tokens
@model IEnumerable<CareHub.Models.Posts>
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Índice";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Administrador");
}

<head>
    <title>Índice</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
</head>

<div class="container mt-4">
    <h1 class="text-center mb-4">Publicações do Fórum</h1>

    <div class="text-center mb-4">
        <a class="btn btn-outline-secondary" asp-action="Criar">Criar nova publicação</a>
    </div>

    @foreach (var item in Model)
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <img src="@item.Utilizador.Foto" alt="Foto do utilizador" class="rounded-circle me-3" width="50" height="50" />
                    <strong>@item.Utilizador.Nome</strong>
                </div>

                <h5 class="card-title">@item.TituloPost</h5>
                <h6 class="card-subtitle mb-2 text-muted">@item.Categoria</h6>
                <p class="card-text">@item.TextoPost</p>

                @if (!string.IsNullOrEmpty(item.Foto))
                {
                    <img src="@item.Foto" alt="Imagem da publicação" class="img-fluid rounded mb-3" style="max-width: 100%;" />
                }
                 
                <div class="d-flex align-items-center mb-2">
                    <button id="like-button-@item.IdPost" 
                            class="btn @(item.ListaUp?.Any(up => up.Utilizador.IdentityUserName == currentUser?.UserName) == true ? "btn-success" : "btn-outline-success") btn-sm me-2" 
                    onclick="AtualizarUpvotes(@item.IdPost)">
                <i class="bi bi-arrow-up"></i></button>

                     <span id="upvote-count-@item.IdPost">@item.ListaUp.Count</span>
</div>


                
                <p class="text-muted">@item.DataPost.ToShortDateString()</p>

                <div>
                    <a class="btn btn-sm btn-outline-secondary me-2" asp-action="Detalhes" asp-route-id="@item.IdPost">Detalhes</a>

                    @if (item.Utilizador.IdentityUserName == User.Identity.Name || isAdmin)
                    {
                        <a class="btn btn-sm btn-outline-primary me-2" asp-action="Editar" asp-route-id="@item.IdPost">Editar</a>
                        <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.IdPost">Apagar</a>
                    }
                </div>
                
                <form id="form-comentario-@item.IdPost" class="mt-3" method="post" asp-action="Comentar" asp-controller="Comentarios">
                    <div class="input-group">
                        <textarea class="form-control rounded-pill" id="comentarioInput-@item.IdPost"
                                    name="TextoCom" placeholder="Escreva um comentário" required style="resize: none; 
                      overflow: hidden; height: 50px;" oninput="this.style.height=''; this.style.height= this.scrollHeight + 'px'"></textarea>
                        <input type="hidden" name="IdPost" value="@item.IdPost" />
                        <button class="btn btn-primary rounded-pill"  type="submit">Comentar</button>
                    </div>
                </form>
                <div class="text-muted mt-2">
                   @if (item.ListaComentarios?.Any() != true)
                   {
                       <div class="mb-2">
                           <p class="text-muted">Ainda sem comentários. Sê o primeiro</p>
                       </div>

                   }
                   else
                   {
                       @foreach (var comentario in item.ListaComentarios)
                       {
                           <div class="d-flex align-items-start mb-2">
                               <img src="@comentario.Utilizador.Foto" alt="Foto do utilizador" class="rounded-circle me-3" width="50" height="50" />

                               <div class="flex-grow-1">
                                   <strong style="margin-top: 0; display: block;">@comentario.Utilizador.Nome</strong>
                                   <p style="margin-top: 10px; margin-bottom: 0;">@comentario.TextoCom</p>
                               </div>

                               <small class="text-muted" style="margin-left: auto;">@comentario.DataCom.ToString("dd-MM-yyyy")</small>
                           </div>

                       }
                   }
                </div>
            </div>
        </div>
    }
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/UpSocket")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();

    async function start() {
        try {
            await connection.start();
            console.log("SignalR Connected.");
            
            connection.on("AtualizarUpvotes", (idPub, upvotes) => {
                document.getElementById(`upvote-count-${idPub}`).innerText = upvotes;
            });
            
            
        } catch (err) {
            console.log(err);
            setTimeout(start, 5000);
        }
    };

   
    
    function AtualizarUpvotes(idPub){
        connection.invoke("AtualizarUpvotes", idPub);
        
    }
    
    // Start the connection.
    start();
</script>